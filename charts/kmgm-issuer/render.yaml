---
# Source: kmgm/templates/serviceaccount-issuer.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-kmgm-issuer
  labels:
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: kmgm/templates/secret-bootstrap-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-kmgm-bootstrap-token
  labels:
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  token: "NDFucmNnVzRiMUhYbjRKZHBmUnNhb3FxQzdvQ3o5dW8="
---
# Source: kmgm/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: issuers.kmgm-issuer.coe.ad.jp
spec:
  group: kmgm-issuer.coe.ad.jp
  names:
    kind: Issuer
    listKind: IssuerList
    plural: issuers
    singular: issuer
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Issuer is the Schema for the issuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IssuerSpec defines the desired state of Issuer
            properties:
              accessToken:
                description: AccessToken is an token string to use for server authentication
                  when bootstrapping
                type: string
              hostPort:
                description: HostPort is a host:port of kmgm server to connect to
                type: string
              pinnedPubKey:
                description: PinnedPubKey is the expected SHA256 hash of the kmgm
                  CA server certificate.
                type: string
              profile:
                description: Profile specifies the kmgm profile used to issue certificates,
                  "default" profile will be used if empty
                type: string
            required:
            - hostPort
            - pinnedPubKey
            type: object
          status:
            description: IssuerStatus defines the observed state of Issuer
            properties:
              conditions:
                items:
                  description: IssuerCondition contains conditino information for
                    an Issuer
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kmgm/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-kmgm-issuer
  labels:
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificaterequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificaterequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kmgm-issuer.coe.ad.jp
  resources:
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kmgm-issuer.coe.ad.jp
  resources:
  - issuers/status
  verbs:
  - get
  - patch
  - update
---
# Source: kmgm/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-kmgm-issuer
  labels:
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-kmgm-issuer
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-kmgm-issuer
  apiGroup: rbac.authorization.k8s.io
---
# Source: kmgm/templates/deployment-issuer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-kmgm-issuer
  labels:
    app.kubernetes.io/component: issuer
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: issuer
      app.kubernetes.io/name: kmgm
      app.kubernetes.io/instance: release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kmgm
        app.kubernetes.io/instance: release
    spec:
      serviceAccountName: release-kmgm-issuer
      securityContext:
        {}
      containers:
        - name: issuer
          securityContext:
            {}
          image: "ghcr.io/ipa-cyberlab/kmgm-issuer:v0.2.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/
              port: http
          readinessProbe:
            httpGet:
              path: /readyz/
              port: http
          resources:
            {}
---
# Source: kmgm/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-kmgm
  labels:
    helm.sh/chart: kmgm-0.2.4
    app.kubernetes.io/name: kmgm
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "v0.2.4"
    app.kubernetes.io/managed-by: Helm
    kmgm.coe.ad.jp/pod: kmgm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kmgm
      app.kubernetes.io/instance: release
      kmgm.coe.ad.jp/pod: kmgm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kmgm
        app.kubernetes.io/instance: release
    spec:
      securityContext:
        {}
      containers:
      - name: kmgm
        args:
        - serve
        - --bootstrap-token-file
        - /etc/kmgm-token/token
        - --expose-metrics
        securityContext:
            {}
        image: "ghcr.io/ipa-cyberlab/kmgm:v0.2.4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 34680
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        volumeMounts:
        - name: profile-vol
          mountPath: /var/lib/kmgm
        - name: token-vol
          mountPath: /etc/kmgm-token
        resources:
            {}
      volumes:
      - name: token-vol
        secret:
          secretName: release-kmgm-bootstrap-token
  volumeClaimTemplates:
  - metadata:
      name: profile-vol
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
